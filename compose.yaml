version: "3.9"

services:
  postgres:
    image: postgres:latest
    container_name: questly-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  questly:
    build:
      image: shadowkick/questly:latest
      context: .
      dockerfile: Questly/Dockerfile
      container_name: questly-app
    environment:
      SERVER_KEY: ${SERVER_KEY}
      HASH_SALT: ${HASH_SALT}
      BASE_URL: ${BASE_URL}
      ISSUER: ${ISSUER}
      AUDIENCE: ${AUDIENCE}
      CONNECTION_STRING: ${CONNECTION_STRING}
      RABBITMQ_HOSTNAME: ${RABBITMQ_HOSTNAME}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy

  questly-admin:
    build:
      context: .
      dockerfile: QuestlyAdmin/Dockerfile
      image: shadowkick/questly:latest
      container_name: questly-admin-app
    environment:
      SERVER_KEY: ${SERVER_KEY}
      HASH_SALT: ${HASH_SALT}
      BASE_URL: ${BASE_URL}
      ISSUER: ${ISSUER}
      AUDIENCE: ${AUDIENCE}
      CONNECTION_STRING: ${CONNECTION_STRING}
      RABBITMQ_HOSTNAME: ${RABBITMQ_HOSTNAME}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    ports:
      - "5051:5051"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pgdata:
